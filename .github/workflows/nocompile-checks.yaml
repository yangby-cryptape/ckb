name: No Compile Checks

on:
  repository_dispatch:
    types: [ no-compile-checks ]

jobs:

  bootstrap:
    name: Bootstrap
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.repos.createCommitStatus({
              state: 'pending',
              owner: context.repo.owner,
              repo: context.repo.repo,
              context: '${{ github.workflow }}',
              sha: '${{ github.event.client_payload.github.sha }}',
              target_url: 'https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}'
            })

  rustfmt:
    name: Rustfmt
    needs: [ bootstrap ]
    runs-on: ${{ github.event.client_payload.env.linux_os }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.client_payload.github.sha }}
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ github.event.client_payload.env.rust_toolchain }}
          components: rustfmt
      - run: make fmt

  check-style:
    name: Check Coding Style
    needs: [ bootstrap ]
    runs-on: ${{ github.event.client_payload.env.linux_os }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.client_payload.github.sha }}
      - run: |
          make check-cargotoml
          make check-whitespaces
          devtools/ci/check-cyclic-dependencies.py

  finally:
    name: Finally
    needs: [ rustfmt, check-style ]
    if: ${{ always() }}
    runs-on: ubuntu-latest
    steps:
      - if: contains(join(needs.*.result, ';'), 'failure') || contains(join(needs.*.result, ';'), 'cancelled')
        run: exit 1
      - uses: actions/github-script@v4
        if: ${{ always() }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.repos.createCommitStatus({
              state: '${{ job.status }}',
              owner: context.repo.owner,
              repo: context.repo.repo,
              context: '${{ github.workflow }}',
              sha: '${{ github.event.client_payload.github.sha }}',
              target_url: 'https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}'
            })
      - uses: actions/github-script@v4
        if: ${{ always() }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.repos.createCommitComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: '${{ github.event.client_payload.github.sha }}',
              body: 'this-is-a-commit-comment'
            })
      - uses: actions/github-script@v4
        if: ${{ always() && github.event.client_payload.github.pull_number }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: ${{ github.event.client_payload.github.pull_number }},
              body: 'this-is-a-pull_request-comment'
            })

  trigger-next-checks:
    name: Trigger Next Checks
    needs: [ finally ]
    if: ${{ github.event.client_payload.env.trigger_next_checks }}
    runs-on: ubuntu-latest
    steps:
      - uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          event-type: basic-checks
          client-payload: ${{ toJSON(github.event.client_payload) }}
      - uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          event-type: build-checks
          client-payload: ${{ toJSON(github.event.client_payload) }}
